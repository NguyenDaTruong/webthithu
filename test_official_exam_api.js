// Test script cho API thi th·∫≠t m·ªõi
const fetch = require('node-fetch');

async function testOfficialExamAPI() {
  console.log('üß™ Testing Official Exam API...\n');
  
  try {
    // Test API m·ªõi
    const response = await fetch('http://localhost:5000/api/questions/official');
    const questions = await response.json();
    
    console.log('‚úÖ API Response Status:', response.status);
    console.log('üìä Number of questions:', questions.length);
    console.log('üéØ Expected: 20 questions\n');
    
    if (questions.length === 20) {
      console.log('‚úÖ PASS: ƒê√∫ng 20 c√¢u h·ªèi');
    } else {
      console.log('‚ùå FAIL: Kh√¥ng ƒë√∫ng 20 c√¢u h·ªèi');
    }
    
    // Ki·ªÉm tra c·∫•u tr√∫c c√¢u h·ªèi
    if (questions.length > 0) {
      const firstQuestion = questions[0];
      console.log('\nüìù Sample question structure:');
      console.log('- ID:', firstQuestion.Id);
      console.log('- Question:', firstQuestion.QuestionText?.substring(0, 50) + '...');
      console.log('- Option A:', firstQuestion.OptionA?.substring(0, 30) + '...');
      console.log('- Option B:', firstQuestion.OptionB?.substring(0, 30) + '...');
      console.log('- Option C:', firstQuestion.OptionC?.substring(0, 30) + '...');
      console.log('- Option D:', firstQuestion.OptionD?.substring(0, 30) + '...');
      console.log('- Correct Answer:', firstQuestion.CorrectAnswer);
      console.log('- Original Correct Answer:', firstQuestion.OriginalCorrectAnswer);
      console.log('- Is Critical:', firstQuestion.IsCritical);
    }
    
    // Ki·ªÉm tra random options
    console.log('\nüé≤ Checking random options...');
    const hasRandomOptions = questions.some(q => q.OriginalCorrectAnswer && q.OriginalCorrectAnswer !== q.CorrectAnswer);
    if (hasRandomOptions) {
      console.log('‚úÖ PASS: Options ƒë∆∞·ª£c random th√†nh c√¥ng');
    } else {
      console.log('‚ö†Ô∏è  WARNING: C√≥ th·ªÉ options ch∆∞a ƒë∆∞·ª£c random (c·∫ßn test nhi·ªÅu l·∫ßn)');
    }
    
  } catch (error) {
    console.error('‚ùå Error testing API:', error.message);
  }
}

// Ch·∫°y test
testOfficialExamAPI();

