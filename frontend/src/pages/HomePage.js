import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import DarkVeil from '../components/DarkVeil';
import "../styles/homepage.css";

const HomePage = () => {
  const navigate = useNavigate();
  const [hoveredCard, setHoveredCard] = useState(null);

  const handleNavigation = (path) => {
    navigate(path);
  };

  const features = [
    {
      id: 'exam',
      title: 'Thi th·∫≠t',
      subtitle: 'L√†m b√†i thi ch√≠nh th·ª©c',
      description: 'Thi l·∫•y ch·ª©ng ch·ªâ giao th√¥ng v·ªõi ƒë·ªÅ thi th·∫≠t t·ª´ ng√¢n h√†ng c√¢u h·ªèi ch√≠nh th·ª©c',
      icon: 'üèÜ',
      gradient: 'linear-gradient(135deg, rgba(255, 107, 107, 0.9) 0%, rgba(255, 142, 83, 0.9) 100%)',
      path: '/exam',
      stats: 'C√≥ th·ªÉ nh·∫≠n ch·ª©ng ch·ªâ'
    },
    {
      id: 'quiz',
      title: 'Thi th·ª≠',
      subtitle: 'Luy·ªán t·∫≠p kh√¥ng gi·ªõi h·∫°n',
      description: '√în luy·ªán v·ªõi h√†ng ng√†n c√¢u h·ªèi ƒëa d·∫°ng, c√≥ gi·∫£i th√≠ch chi ti·∫øt',
      icon: 'üìö',
      gradient: 'linear-gradient(135deg, rgba(84, 160, 255, 0.9) 0%, rgba(117, 127, 251, 0.9) 100%)',
      path: '/quiz',
      stats: 'S·ª≠a sai ngay trong l√∫c l√†m b√†i'
    },
    {
      id: 'certificate',
      title: 'Ch·ª©ng ch·ªâ',
      subtitle: 'Tra c·ª©u & qu·∫£n l√Ω',
      description: 'Tra c·ª©u th√¥ng tin ch·ª©ng ch·ªâ',
      icon: 'üìã',
      gradient: 'linear-gradient(135deg, rgba(96, 209, 148, 0.9) 0%, rgba(34, 193, 195, 0.9) 100%)',
      path: '/certificate',
      stats: 'Tra c·ª©u nhanh'
    }
  ];

  const quickStats = [
    // { label: 'Ng∆∞·ªùi d√πng', value: '12,500+' },
    // { label: 'C√¢u h·ªèi', value: '2,500+' },
    // { label: 'T·ª∑ l·ªá ƒë·∫≠u', value: '85%' },
    // { label: 'Ch·ª©ng ch·ªâ', value: '8,200+' }
  ];

  return (
    <div className="homepage-container">
      <div className="background-container">
        <DarkVeil
          speed={0.5}
          hueShift={0}
          noiseIntensity={0}
          scanlineIntensity={0}
          scanlineFrequency={0}
          warpAmount={0}
          resolutionScale={1}
        />
      </div>

      <div className="content-wrapper">
        <header className="main-header">
          <div className="header-glass">
            <div className="logo-section">
              <div className="logo-icon">üöó</div>
              <span className="logo-text">TrafficExam</span>
            </div>
            <button className="header-cta" onClick={() => navigate('/quiz')}>ƒêƒÉng nh·∫≠p</button>
          </div>
        </header>

        <section className="hero-section">
          <div className="hero-content">
            <h1 className="hero-title">
              <span className="title-line">Ng√¢n h√†ng c√¢u h·ªèi</span>
              <span className="title-line gradient-text">Giao th√¥ng Vi·ªát Nam</span>
            </h1>
            <p className="hero-description">
              N·ªÅn t·∫£ng h·ªçc t·∫≠p v√† thi th·ª≠ ch·ª©ng ch·ªâ giao th√¥ng tr·ª±c tuy·∫øn h√†ng ƒë·∫ßu.
              B·ªô ƒë·ªÅ thi GPLX v·ªõi 600 c√¢u h·ªèi ƒë∆∞·ª£c c·∫≠p nh·∫≠t li√™n t·ª•c theo lu·∫≠t giao th√¥ng m·ªõi 2025.
            </p>
            <div className="quick-stats">
              {quickStats.map((stat, index) => (
                <div key={index} className="stat-item">
                  <div className="stat-value">{stat.value}</div>
                  <div className="stat-label">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </section>

        <section className="features-section">
          <div className="features-header">
            <h2 className="section-title">Ch·ªçn ch·ª©c nƒÉng</h2>
            <p className="section-subtitle">B·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n ngay h√¥m nay</p>
          </div>
          <div className="features-grid">
            {features.map((feature, index) => (
              <div
                key={feature.id}
                className={`feature-card ${hoveredCard === feature.id ? 'hovered' : ''}`}
                onMouseEnter={() => setHoveredCard(feature.id)}
                onMouseLeave={() => setHoveredCard(null)}
                onClick={() => handleNavigation(feature.path)}
                style={{ '--delay': `${index * 0.1}s` }}
              >
                <div className="card-background" style={{ background: feature.gradient }}></div>
                <div className="card-glass"></div>
                <div className="card-content">
                  <div className="card-icon">{feature.icon}</div>
                  <div className="card-info">
                    <h3 className="card-title">{feature.title}</h3>
                    <p className="card-subtitle">{feature.subtitle}</p>
                    <p className="card-description">{feature.description}</p>
                  </div>
                  <div className="card-stats">{feature.stats}</div>
                  <div className="card-arrow">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                      <path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>

        <section className="info-section">
          <div className="info-glass">
            <div className="info-content">
              <h3>T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h3>
              <div className="info-features">
                <div className="info-item">
                  <span className="info-icon">‚úÖ</span>
                  <span>C√¢u h·ªèi ch√≠nh th·ª©c t·ª´ B·ªô Giao th√¥ng V·∫≠n t·∫£i</span>
                </div>
                <div className="info-item">
                  <span className="info-icon">‚ö°</span>
                  <span>C·∫≠p nh·∫≠t li√™n t·ª•c theo quy ƒë·ªãnh m·ªõi nh·∫•t</span>
                </div>
                <div className="info-item">
                  <span className="info-icon">üì±</span>
                  <span>H·ªó tr·ª£ ƒëa n·ªÅn t·∫£ng: Web, Mobile, Tablet</span>
                </div>
                <div className="info-item">
                  <span className="info-icon">üéØ</span>
                  <span>Gi·∫£i th√≠ch chi ti·∫øt cho t·ª´ng c√¢u h·ªèi</span>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
};

export default HomePage;